#+begin_src latex
  \section*{Introduction}
  The Neighbors package provides tools for finding the target and
  neighbor genomes used by \ty{fur} to find unique regions. These unique
  regions then serve as the basis for constructing diagnostic
  markers. In this Tutorial I demonstrate the application of the seven
  programs in the Neighbors package. We begin by constructing a
  relational database from the NCBI taxonomy data using the program
  \ty{makeNeiDb}. Then we query the database with \ty{taxid} to find the
  taxon-ID for our target organism. The programs \ty{ants} and \ty{dree}
  allow us to explore the taxonomic context of our target
  organism. Based on the target taxon-ID, we carry out the search for
  target and neighbor genomes using \ty{neighbors}.

  Any genomes suggested by \ty{neighbors} are best subjected to
  phylogeny reconstruction before we extract markers from them using
  \ty{fur}. The prerequisite phylogeny reconstruction is supported by
  two additional programs from the Neighbors package, \ty{land} for
  labeling the nodes in a phylogeny, and \ty{pickle} for picking a
  particular clade in a phylogeny.

  \section*{Construct Database}
  The NCBI taxonomy database and the corresponding genome reports are
  posted at
#+end_src
#+begin_src sh <<db.sh>>=
  ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz
  ftp.ncbi.nlm.nih.gov/genomes/GENOME_REPORTS/prokaryotes.txt
  ftp.ncbi.nlm.nih.gov/genomes/GENOME_REPORTS/eukaryotes.txt
  ftp.ncbi.nlm.nih.gov/genomes/GENOME_REPORTS/viruses.txt
#+end_src
#+begin_src latex
  These four files are updated regularly. To ensure the stability of
  this Tutorial, we use files downloaded on 14. September 2022:
#+end_src
#+begin_src sh <<db.sh>>=
  wget guanine.evolbio.mpg.de/neighbors/neidb.tgz
#+end_src
#+begin_src latex
  We unpack the database files, delete the tar file, change into the new
  directory \ty{neidb}, and unpack the database dump.
#+end_src
#+begin_src sh <<db.sh>>=
  tar -xvzf neidb.tgz
  rm neidb.tgz
  cd neidb
  tar -xvzf taxdump.tar.gz
#+end_src
#+begin_src latex
  We can now construct the taxonomy database, \ty{neidb}, using
  \ty{makeNeiDb}. This takes approximately 17s. Then we return to the
  parent directory and move the database \ty{neidb} there. Since the
  database has the same name as the directory that contains it, we first
  move the database to \ty{tmpdb}, remove the download directory, and
  move \ty{tmpdb} to \ty{neidb}.
#+end_src
#+begin_src sh <<db.sh>>=
  makeNeiDb
  cd ../
  mv neidb/neidb tmpdb
  rm -r neidb
  mv tmpdb neidb
#+end_src
#+begin_src latex
  \section*{Query Database}
  The next step is to find the taxon-IDs for our target organism or
  target organisms. Say, our target organism is the bactrium
  \emph{Aerococcus urinae}, which causes urinary tract infections. We
  look up its taxon-ID using \ty{taxi}.
#+end_src
#+begin_src sh <<query.sh>>=
  taxi "Aerococcus urinae" neidb
#+end_src
#+begin_src latex
  \begin{verbatim}
  # ID    Parent  Name
    1376  1375    Aerococcus urinae
  \end{verbatim}
  This tells us that \emph{Aerococcus urinae} has taxon-ID 1376
  and its parent has taxon-ID 1375. If we are interested in the wider
  taxonomic context of \emph{A. urinae}, we can look up all its
  ancestors with \ty{ants} to find that \emph{A. urinae} belongs to the
  Firmicutes.
#+end_src
#+begin_src sh <<query.sh>>=
  ants 1376 neidb
#+end_src
#+begin_src latex
  \begin{verbatim}
  # Back  ID       Name
    9     1        root
    8     131567   cellular organisms
    7     2        Bacteria
    6     1783272  Terrabacteria group
    5     1239     Firmicutes
    4     91061    Bacilli
    3     186826   Lactobacillales
    2     186827   Aerococcaceae
    1     1375     Aerococcus
    0     1376     Aerococcus urinae
  \end{verbatim}
#+end_src
#+begin_export latex
We can draw the tree rooted on \emph{Aerococcus}.
#+end_export
#+begin_src sh <<query.sh>>=
  dree 1375 neidb | dot -T x11
#+end_src
#+begin_src latex
  Unfortunately, this tree is so large, it's illegible and when we zoom
  in, navigating the image becomes difficult. So instead of piping it to
  an X11 window, we save it to file and render this file with a tool
  that allows easy navigation, e. g. \ty{eog}.
#+end_src
#+begin_src sh <<query.sh>>=
  dree 1375 neidb | dot -T svg > tmp.svg
  eog tmp.svg &
#+end_src
#+begin_export latex
Still, this is not a very useful view. So we restrict
it to the clades with sequenced genomes and get Figure~\ref{fig:au1},
where taxa with sequenced genomes are colored.
#+end_export
#+begin_src sh <<query.sh>>=
  dree -g 1375 neidb | dot -T x11
#+end_src
#+begin_src latex
  \begin{figure}
    \begin{center}
      \resizebox{\textwidth}{!}{\includegraphics{../tutorial/1375_t_g.ps}}
    \end{center}
    \caption{The taxonomy of \emph{Aerococcus} (1375) restricted to taxa
      with sequenced genomes, which are shown as colored
      nodes.}\label{fig:au1}
  \end{figure}
  Since taxon-IDs are difficult to interpret, we convert them to taxon
  names in Figure~\ref{fig:au2}.
#+end_src
#+begin_src sh <<query.sh>>=
  dree -n -g 1375 neidb | dot -T x11
#+end_src
#+begin_src latex
  \begin{figure}
    \begin{center}
      \resizebox{\textwidth}{!}{\includegraphics{../tutorial/1375_n_g.ps}}
    \end{center}
    \caption{The taxonomy tree of \emph{Aerococcus} with sequenced
      genomes and taxon names.}\label{fig:au2}
  \end{figure}
  Now we search for the neighbors of \emph{Aerococcus}.
#+end_src
#+begin_src sh <<query.sh>>=
  printf "1376" | neighbors -g neidb
#+end_src
#+begin_src latex
  \begin{verbatim}
  # MRCA(targets): 1376, Aerococcus urinae
  # MRCA(targets+neighbors): 1375, Aerococcus
  # Type  Taxon-ID  Name                      Genomes
  # MRCA(targets): 1376, Aerococcus urinae
  # MRCA(targets+neighbors): 1375, Aerococcus
  # Type  Taxon-ID  Name                                Genomes
  t       1376      Aerococcus urinae                   NZ_CP014161.1|NZ_CP065662.1
  tt      866775    Aerococcus urinae ACS-120-V-Col10a  NC_015278.1
  n       1377      Aerococcus viridans                 NZ_CP014164.1
  n       51665     Aerococcus urinaeequi               NZ_CP013988.1|NZ_CP014162.1|...
  n       87541     Aerococcus christensenii            NZ_CP014159.1
  n       119206    Aerococcus sanguinicola             NZ_CP014160.1
  n       128944    Aerococcus urinaehominis            NZ_CP014163.1
  \end{verbatim}
  I've slightly edited the output of \ty{neighbors} for clarity. It
  begins with three hashed lines. The first states the most recent
  common ancestor of the targets, \emph{A. urinae} with taxon-ID
  1376. The second states the most recent common ancestor of the
  neighbors and the targets, \emph{Aerococcus}, with taxon-ID 1375. The
  third hashed row is the header of the subsequent table, which consists
  of four columns, type, taxon-ID, name, and genomes. There are three
  possible types, ``t'' for known target, ``tt'' for new target, and
  ``n'' for neighbor. We see the new target 866775, which was already in
  Figure~\ref{fig:au1}, but wasn't contained in our query.

  To download the targets and neighbors, this ``report view'' of the
  results is a bit tricky to process. So we use the ``list view instead''.
#+end_src
#+begin_src sh <<query.sh>>=
  printf "1376" | neighbors -l neidb
#+end_src
#+begin_export latex
\begin{verbatim}
# Sample  Name            Accession
t         chromosome      NZ_CP014161.1
t         chromosome      NZ_CP065662.1
t         chromosome      NC_015278.1
n         chromosome      NZ_CP014164.1
n         chromosome      NZ_CP014160.1
n         chromosome      NZ_CP014159.1
n         chromosome      NZ_CP014163.1
n         chromosome      NZ_CP013988.1
n         chromosome      NZ_CP014162.1
n         chromosome      NZ_CP063065.1
n         plasmid_pT4302  NZ_CP063066.1
n         plasmid_pT4303  NZ_CP063067.1
\end{verbatim}
#+end_export
#+begin_export latex
To prepare the download, we make directories for the targets and
neighbors. We also save a slightly edited version of the accessions in
the file \ty{acc.txt}.
#+end_export
#+begin_src sh <<query.sh>>=
  mkdir targets neighbors
  printf "1376" | neighbors -l neidb > acc.txt
#+end_src
#+begin_export latex
We extract the target accessions, download the corresponding genomes
in FASTA format, and store them in the \ty{targets} directory. The
names of the sequence files are the accessions prefixed by \ty{t}.
#+end_export
#+begin_src sh <<query.sh>>=
  grep '^t' acc.txt |
      awk '{print $3}' |
      while read a
      do
	  echo $a
	  efetch -db nucleotide -id ${a} \
		 -format fasta > targets/t${a}.fasta
      done
#+end_src
#+begin_src latex
  Among the neighbor genomes we ignore plasmid sequences. This time we
  prefix the file names by \ty{n}.
#+end_src
#+begin_src sh <<query.sh>>=
      grep '^n' acc.txt |
      grep -v plasmid |
      awk '{print $3}' |
      while read a
      do
	  echo $a
	  efetch -db nucleotide -id ${a} \
		 -format fasta > neighbors/n${a}.fasta
      done
#+end_src
#+begin_src latex
  We compute a quick phylogeny for the target and neighbor genomes using
  \ty{phylonium}\footnote{\ty{github.com/evolbioinf/phylonium}} and
  programs form the
  \ty{biobox}\footnote{\ty{github.com/evolbioinf/biobox}}. The result in
  Figure~\ref{fig:auTree} shows that the targets are monophyletic, which
  is necessary for a successful \ty{fur} run.
  \begin{figure}
    \begin{center}
      \scalebox{0.75}{\includegraphics{../tutorial/au}}
    \end{center}
    \caption{Phylogeny of target and neighbor genomes; targets are
      prefixed ``t'', neighbors ``n''.}\label{fig:auTree}
  \end{figure}
#+end_src
#+begin_src sh <<query.sh>>=
  phylonium targets/* neighbors/* | nj | midRoot > au.nwk
  sed 's/_//g' au.nwk > au2.nwk
  plotTree au2.nwk
#+end_src
#+begin_src latex
  Now we can construct the \ty{fur} database with \ty{makeFurDb} and run
  \ty{fur}\footnote{\ty{github.com/evolbioinf/fur}} on it to get
  approximately 474 kb potential marker material after cleaning with
  \ty{cleanSeq}, which is part of the \ty{fur} package. The program
  \ty{cres} used to quantify the output of \ty{fur} is also part of the
  \ty{biobox}.
#+end_src
#+begin_src sh <<query.sh>>=
  makeFurDb -t targets/ -n neighbors/ -d au.db
  fur -d au.db | cleanSeq > au.fasta
  cres au.fasta
#+end_src
#+begin_src latex
  If we look again at the phylogeny in Figure~\ref{fig:auTree}, we might
  want to rethink the position of NC015278. Perhaps it should be a
  neighbor rather than a target? This of course depends on the details
  of our test system. But let's say we make NC015278 a neighbor; then
  our set of potential markers shrinks to 105 kb.
#+end_src
#+begin_src sh <<query.sh>>=
  mv targets/tNC_015278.1.fasta neighbors/
  makeFurDb -t targets/ -n neighbors/ -d au2.db
  fur -d au2.db/ | cleanSeq > au2.fasta
  cres au2.fasta
#+end_src
#+begin_src latex
  We might extend this analysis by making NC015278 the target and
  everything else the neighors. This returns 190 kb marker material.
#+end_src
#+begin_src sh <<query.sh>>=
  mv targets/* neighbors/
  mv neighbors/tNC_015278.1.fasta targets/
  makeFurDb -t targets/ -n neighbors/ -d au3.db
  fur -d au3.db/ | cleanSeq > au3.fasta
  cres au3.fasta
#+end_src
#+begin_src latex
  \subsection*{Pick Clades from Phylogeny}
  Sometimes a tree of genomes is very large, making it inconvenient to
  manually list the taxa that belong to a particular clade. This isn't
  an issue in our analysis (Figure~\ref{fig:auTree}), but if it were, we
  could use the programs \ty{land} and \ty{pickle} to first label and
  then pick individual clades. \ty{land} labels the nodes in a tree,
  yielding Figure~\ref{fig:auTree2}.
  \begin{figure}
    \begin{center}
      \scalebox{0.75}{\includegraphics{../tutorial/au2}}
    \end{center}
    \caption{Phylogeny of target and neighbor genomes with internal
      nodes, or \emph{clades}, labeled.}\label{fig:auTree2}
  \end{figure}
#+end_src
#+begin_src sh <<query.sh>>=
  land au2.nwk > au3.nwk
  plotTree au3.nwk
#+end_src
#+begin_src latex
  Now we can pick a clade, say clade 7, and print its five leaf labels
  with \ty{pickle}.
#+end_src
#+begin_src sh <<query.sh>>=
  pickle 7 au3.nwk
#+end_src
#+begin_src latex
  \begin{verbatim}
  # Selected clades
  ## 7
  nNZCP014163.1
  nNZCP063065.1
  nNZCP014164.1
  nNZCP013988.1
  nNZCP014162.1
  \end{verbatim}
#+end_src
