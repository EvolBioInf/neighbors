#+begin_src latex
  \section*{Introduction}
  In this Tutorial we construct an \ty{sqlite} database from the NCBI
  taxonomy data. Then we query the database to find the taxon-IDs for
  our target organism. Based on these taxon-IDs, we carry out the search
  for neighbors using \ty{neighbors}.
  \section*{Construct Database}
  We download the taxonomy database and the genome reports from the
  NCBI.
#+end_src
#+begin_src sh <<construct.sh>>=
  rsync --copy-links --times --verbose \
	rsync://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz .
  rsync --copy-links --times --verbose \
	rsync://ftp.ncbi.nlm.nih.gov/genomes/GENOME_REPORTS/prokaryotes.txt .
  rsync --copy-links --times --verbose \
	rsync://ftp.ncbi.nlm.nih.gov/genomes/GENOME_REPORTS/eukaryotes.txt .
  rsync --copy-links --times --verbose \
	rsync://ftp.ncbi.nlm.nih.gov/genomes/GENOME_REPORTS/viruses.txt .
#+end_src
#+begin_src latex
  We unpack the taxonomy database.
#+end_src
#+begin_src sh <<construct.sh>>=
  tar -xvzf taxdump.tar.gz
#+end_src
#+begin_src latex
  This generates nine files, of which we use two, \ty{nodes.dmp} with
  the nodes of the taxonomic tree, and \ty{names.dmp} with the taxon
  names. We construct the taxonomy database \ty{tax.db} by running
  \ty{makeNeiDb} in default mode. This takes less than a minute.
#+end_src
#+begin_src sh <<construct.sh>>=
  makeNeiDb
#+end_src
#+begin_src latex
  \section*{Query Database}
  The next step is to find the taxon-IDs for our target organisms. Say,
  our target organism is \emph{Aerococcus urinae}. We look at the
  database diagram in Figure~\ref{fig:tax} and construct a query for the
  the names of all taxa starting with \emph{Aerococcus urinae} that also
  have sequenced genomes, or replicons. Missing replicons are marked by
  dashes in the database.
#+end_src
#+begin_src sh <<query.sh>>=
  sqlite tax.db \
	  "select distinct(name)
	   from taxon join genome
	   where taxon.taxid = genome.taxid
	   and replicons <> '-'
	   and name like 'Aerococcus urinae%'"
#+end_src
#+begin_src latex
  \begin{verbatim}
  Aerococcus urinae
  Aerococcus urinae ACS-120-V-Col10a
  Aerococcus urinaeequi
  Aerococcus urinaehominis
  \end{verbatim}
#+end_src
#+begin_src latex
  The query result contains four taxa, \emph{A. urinae}, its strain
  ACS-120-V-Col10a, \emph{A. urinaequi}, and
  \emph{A. urinaehominis}. Strain ACS-120-V-Col10a seems to belong to
  the \emph{A. urinae}, so next we add the child/parent relationship to
  the query. To make the output easier to read, we also sort it by
  taxon-ID.
#+end_src
#+begin_src sh <<query.sh>>=
  sqlite tax.db \
	 "select taxon.taxid, parent, name
	  from taxon join genome
	  where taxon.taxid = genome.taxid
	  and replicons <> '-'
	  and name like 'Aerococcus urinae%'
	  order by taxon.taxid"
#+end_src
#+begin_src latex
  \begin{table}
    \begin{center}
      \begin{tabular}{ccl}
	\hline
	Taxon & Parent & Name\\\hline
	\input{../tutorial/au1}
	\hline
      \end{tabular}
    \end{center}
    \caption{Result of query for the topology of the taxonomy of
      \emph{Aerococcus urinae} with sequenced
      genomes.}\label{tab:au1}
  \end{table}
  The result in Table~\ref{tab:au1} shows that the taxon-ID of
  \emph{A. urinae} is 1376 and that the parent-ID of strain
  ACS-120-V-Col10a is also 1376, which makes it a \emph{A. urinae}, no
  surprise there. Taxon 1376 in turn has parent 1375, which is also the
  ancestor of the other two taxa in our list, \emph{A. urinaeequi} and
  \emph{A. urinaehominis}.

  We can visualize the tree implicit in Table~\ref{tab:au1} with the
  program \ty{dree}. It takes one or more taxon-IDs as input and draws
  the subtrees rooted on these taxa. Let's draw the tree rooted on 1375,
  the ancestor we just discovered through our SQL query
  (Table~\ref{tab:au1}). By default, \ty{dree} labels nodes with
  taxon-IDs, but we request names (\ty{-n}). Also, by default, \ty{dree}
  draws the full tree, but this happens to be very large (feel free to
  try), so we reduce it to the taxa with sequenced genomes
  (\ty{-g}). The tree itself is drawn with the \ty{dot} program, which
  is part of the \ty{graphviz} package. Figure~\ref{fig:auTaxTree} shows
  that the taxonomic neighborhood of \emph{A. urinae} includes a few
  more taxa with sequenced genomes than we had seen with our SQL query.
#+end_src
#+begin_src sh <<query.sh>>=
  printf "1375\n" | dree -n -g tax.db | dot -T x11
#+end_src
#+begin_src latex
  \begin{figure}
    \begin{center}
      \resizebox{\textwidth}{!}{\includegraphics{../tutorial/1375_n_g.ps}}
    \end{center}
    \caption{The taxonomy tree of \emph{Aerococcus} reduced to taxa with
    sequenced genomes}\label{fig:auTaxTree}
  \end{figure}

  Now we add the genome accessions to our query.
#+end_src
#+begin_src sh <<query.sh>>=
  sqlite tax.db \
	 "select taxon.taxid, parent, name, replicons
	  from taxon join genome
	  where taxon.taxid = genome.taxid
	  and replicons <> '-'
	  and name like 'Aerococcus urinae%'
	  order by taxon.taxid"
#+end_src
#+begin_src latex
  \begin{table}
    \begin{center}
      \begin{tabular}{ccll}
      \hline
      Taxon & Parent & Name & Genome\\\hline
      \input{../tutorial/au2}
      \hline
      \end{tabular}
    \end{center}
    \caption{Results of \emph{Aerococcus} query with genome accessions.}\label{tab:au2}
  \end{table}
  Form the results in Table~\ref{tab:au2} we learn that \emph{A. urinae}
  has three genome sequences, CP014161, CP065662, and CP002512. So we
  fetch them from Genbank, mark their names with prefix ``t'', and store
  them in the directory \ty{targets}
#+end_src
#+begin_src sh <<query.sh>>=
  efetch -db nucleotide -format fasta \
	 -id CP014161 > tCP014161.fasta
  efetch -db nucleotide -format fasta \
	 -id CP065662 > tCP065662.fasta
  efetch -db nucleotide -format fasta \
	 -id CP002512 > tCP002512.fasta
  mkdir targets
  mv CP*.fasta targets
#+end_src
#+begin_src latex
  Now se search for the neighbors of taxon-IDs 1376 and 866775.
#+end_src
#+begin_src sh <<query.sh>>=
  printf "1376\n866775\n" | neighbors tax.db
#+end_src
#+begin_src latex
  \begin{verbatim}
  # MRCA(targets): 1376, Aerococcus urinae
  # MRCA(targets+neighbors): 1375, Aerococcus
  # Type  Taxon-ID  Name                      Genomes
  t       1376      Aerococcus urinae         CP014161|CP065662
  t       866775    Aerococcus urinae ACS     CP002512
  tt      1216979   Aerococcus urinae NBRC    -
  n       1375      Aerococcus                -
  n       1377      Aerococcus viridans       CP014164
  n       51665     Aerococcus urinaeequi     CP013988|CP014162|CP063065
  n       79233     Aerococcus sp. LV65.5:W1  -
  n       87541     Aerococcus christensenii  CP014159
  n       119206    Aerococcus sanguinicola   CP014160
  n       128944    Aerococcus urinaehominis  CP014163
  ...
  \end{verbatim}
  The output begins with three hashed lines. The first states the most
  recent common ancestor of the targets, \emph{A. urinae} with taxon-ID
  1376. The second states the most recent common ancestor of the
  neighbors and the targets, \emph{Aerococcus}, with taxon-ID 1375. The
  third hashed row is the header of the subsequent table, which consists
  of four columns, type, taxon-ID, name, and genomes. There are three
  possible types, ``t'' for known target, ``tt'' for new target, and
  ``n'' for neighbor. We see that there is one new target, but its
  genome hasn't been sequenced yet. Among the neighbors there are seven
  genomes. We fetch them using a loop over their accessions, mark their
  names with prefix ``n'', and store them in the directory
  \ty{neighbors}.
#+end_src
#+begin_src sh <<query.sh>>=
  mkdir neighbors
  for a in CP014164 CP013988 CP014162 CP063065
	   CP014159 CP014160 CP014163
  do
      efetch -db nucleotide -format fasta \
	     -id $a > neighbors/n${a}.fasta
  done
#+end_src
#+begin_src latex
  We compute a quick phylogeny for the target and neighbor genomes using
  \ty{phylonium}\footnote{\ty{github.com/evolbioinf/phylonium}} and
  programs form the
  \ty{biobox}\footnote{\ty{github.com/evolbioinf/biobox}}. The result in
  Figure~\ref{fig:auTree} shows that the targets are monophyletic, which
  is necessary for a successful \ty{fur} run.
  \begin{figure}
    \begin{center}
      \scalebox{0.75}{\includegraphics{../tutorial/au}}
    \end{center}
    \caption{Phylogeny of target and neighbor genomes; targets are
      prefixed ``t'', neighbors ``n''.}\label{fig:auTree}
  \end{figure}
#+end_src
#+begin_src sh <<query.sh>>=
  phylonium targets/* neighbors/* | nj | midRoot | plotTree
#+end_src
#+begin_src latex
  Now we can construct the \ty{fur} database with \ty{makeFurDb} and run
  \ty{fur}\footnote{\ty{github.com/evolbioinf/fur}} on it to get
  approximately 474 kb potential marker material. The program \ty{cres}
  for quantifying the output of \ty{fur} is also part of the
  \ty{biobox}.
#+end_src
#+begin_src sh <<query.sh>>=
  makeFurDb -t targets/ -n neighbors/ -d au.db
  fur -d au.db | cleanSeq > au.fasta
  cres au.fasta
#+end_src
#+begin_src latex
  If we look again at the phylogeny in Figure~\ref{fig:auTree}, we might
  want to rethink the position of CP002512. Perhaps it should be a
  neighbor rather than a target? This of course depends on the details
  of our test system. But let's say we make CP002512 a neighbor; then
  our set of potential markers shrinks to 105 kb.
#+end_src
#+begin_src sh <<query.sh>>=
  mv targets/tCP002512.fasta neighbors/
  makeFurDb -t targets/ -n neighbors/ -d au2.db
  fur -d au2.db/ | cleanSeq > au2.fasta
  cres au2.fasta
#+end_src
#+begin_src latex
  We might extend this analysis by making CP002512 the target and
  everything else the neighors. This returns 190 kb marker material.
#+end_src
#+begin_src sh <<query.sh>>=
  mv targets/* neighbors/
  mv neighbors/tCP002512.fasta targets/
  makeFurDb -t targets/ -n neighbors/ -d au3.db
  fur -d au3.db/ | cleanSeq > au3.fasta
  cres au3.fasta
#+end_src
